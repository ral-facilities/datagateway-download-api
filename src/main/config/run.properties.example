# List of Facility names
# These names will be used by Topcat over the REST API;
# each facility name in topcat.json must contain a match in this list,
# and each name must be mapped to ICAT / IDS urls.
# Edit these values to match your installation.

facility.list = LILS YFH

facility.LILS.icatUrl = http://localhost:8080
facility.LILS.idsUrl = http://localhost:8080
facility.YFH.icatUrl = https://your.facility.icatUrl.here
facility.YFH.idsUrl = https://your.facility.idsUrl.here

# Download transport URLs
# topcat.json can specify one or more download transport types for each facility, egs "https", "globus";
# each may have a distinct download URL (prefix). To specify the download URL for a specific facility
# and transport type, set an appropriate property as below.
# Note that the transport type will be set in requests from the Topcat Javascript application,
# but the URL to specify here should be the IDS url that will be used in the Java clients;
# so it may be that the Javascript transport type https should be mapped here to an
# internal http URL.
# If the property is not defined, Topcat will use the facility's idsUrl by default.

facility.LILS.downloadType.http = http://localhost:8080
facility.LILS.downloadType.list = http
facility.LILS.downloadType.http.displayName = HTTP
facility.LILS.downloadType.http.description = Example description for HTTP access method.

facility.YFH.downloadType.list = https globus
facility.YFH.downloadType.https = https://your.facility.downloadIdsUrl.here
facility.YFH.downloadType.https.displayName = HTTPS
facility.YFH.downloadType.https.description = Example description for HTTPS access method.
facility.YFH.downloadType.https.disallowedAuthn = simple db
facility.YFH.downloadType.globus = https://your.facility.globusUrl.here
facility.YFH.downloadType.globus.displayName = Globus
facility.YFH.downloadType.globus.description = Example description for Globus access method.
facility.YFH.downloadType.globus.allowedGroupings = principal_beamline_scientists admins

# enable send email
mail.enable=true

# The email subject. Tokens available are:
# ${userName} - user username
# ${email} - user email
# ${facilityName} - the facility key (defined in frontend config)
# ${preparedId} - the prepared Id of the download request
# ${fileName} - the download name
# ${size} - the download size
# ${downloadUrl} - the download url
# ${customValue} - optionally set by calls to setDownloadStatus where the status is complete
mail.subject=TopCAT Download ${fileName} Ready

# The email body message for https downloads. All subject tokens as above are available.
mail.body.https=Hi ${userName},\n\nYour ${size} download ${fileName} has been prepared and is ready for download at ${downloadUrl}.\n\nThank you for using TopCAT.

# The email body message for https downloads. All subject tokens as above are available.
mail.body.globus=Hi ${userName}, \n\nYour ${size} Globus download ${fileName} is ready. Please see https:/example.com/#/globus-faq for more information on how to download using Globus.\n\nThank you for using TopCAT

# The email body message for smartclient downloads. All subject tokens as above are available.
mail.body.smartclient=Hi ${userName}, \n\nYour ${size} SmartClient download ${fileName} is ready. Please check your smartclient home directory for your files.\n\nThank you for using TopCAT

# The email body message for SCARF downloads. All subject tokens as above are available.
mail.body.scarf=Hi ${userName}, \n\nYour ${size} SCARF download ${fileName} is ready. Please see https:/example.com/#/scarf-faq for more information on how to download using SCARF.\n\nThank you for using TopCAT

# The email body message for Ada downloads. All subject tokens as above are available.
mail.body.ada = Hi ${userName}, \n\nYour ${size} recall ${fileName} is ready as an Ada data share. Please visit https:/example.com to redeem access using the following token.\n\n${customValue}\n\nThank you for using DataGateway
mail.required.ada = true

# The maximum number of datafiles for a getStatus call to the IDS for two level storage
ids.getStatus.max=100

# The delay in seconds before polling starts. This delay is to gives the ids a chance to do its thing before we query it
poll.delay=600

# The wait time in seconds between each poll to the IDS.
poll.interval.wait=600

# A list of usernames that can use the admin REST API and Topcat admin user interface
adminUserNames=simple/root, uows/elz087, asd345, ldap/fgh123

# The maximum number objects that can be cached before pruning will take place
maxCacheSize=100000

# The following properties allow finer control over caching of Investigation sizes.
# Investigations can change size over time, so setting a lifetime on cached values may be useful.
# It may be useful not to cache zero-sized Investigations at all.
# IMPORTANT: size requests are also cached in the browser, so check settings in topcat.json too.

# Lifetime in seconds for cached Investigation sizes (default is 0, which means "immortal")
# investigationSizeCacheLifetimeSeconds=600

# Whether to cache zero-sized Investigations (default is false)
# neverCacheZeroSizedInvestigations=false

# Timeout for IDS connections.
# Optional (default is no timeout). Can be in seconds (suffix 's'), minutes ('m') or milliseconds (no suffix)
# ids.timeout=180000
# ids.timeout=180s
# ids.timeout=3m

# Username that corresponds with the anonymous user - this is used to make anonymous carts unique
anonUserName=anon/anon
# If false, anonymous users will not be able to download via any method (queued or otherwise)
anonDownloadEnabled=True

# Authentication plugin to use if it is not specified in the login request
defaultPlugin=simple

# Facility to use if it is not specified in the login request
defaultFacilityName=LILS

# Queued Downloads are authorized with the user's sessionId, but this may expire before
# the Download is ready to be prepared so these will be submitted to the IDS with a
# functional read all account.
queue.account.LILS.plugin=simple
queue.account.LILS.username=username
queue.account.LILS.password=password

# Limit the number maximum of active RESTORING downloads. Does not affect user submitted carts,
# but queued requests will only be started when there are less than this many RESTORING downloads.
# Negative values will start all queued jobs immediately, regardless of load.
queue.maxActiveDownloads = 10

# Limit the number files per queued Download part. Multiple Datasets will be combined into part
# Downloads based on their fileCount up to this limit. If a single Dataset has a fileCount
# greater than this limit, it will still be submitted in a part by itself.
queue.visit.maxPartFileCount = 10000

# Requests to the /queue/files endpoint will be rejected if they exceed this number of files
# Any chunking should be done clientside
queue.files.maxFileCount = 10000

# When queueing Downloads a positive priority will allow a User to proceed.
# Non-positive values will block that User from submitting a request to the queue.
# When automatically moving jobs from the queued to the PREPARING state, all Downloads
# from Users with priority 1 will be scheduled before 2 and so on.
# Specific individuals can be identified with their ICAT username, this will take precedence over all other settings
# Groupings of users can be identified by the name of the Grouping
# InstrumentScientists can either be identified for specific Instrument.names, or a global default
# InvestigationUsers can either be identified for specific InvestigationUser.roles, or a global default
# Authenticated Users without InstrumentScientist or InvestigationUser status will use the authenticated priority
# Anyone who does not meet a specific priority class will use the default
# Users meeting multiple criteria will use the highest priority available (lowest number)
queue.priority.user = {"simple/root": 1}
queue.priority.grouping = {"principal_beamline_scientists": 1}
queue.priority.instrumentScientist.instruments = {"ABC": 1}
queue.priority.instrumentScientist.default = 2
queue.priority.investigationUser.roles = {"ABC": 3}
queue.priority.investigationUser.default = 4
queue.priority.authenticated = {"orcid": 6, "anon": 0}
queue.priority.default = 5

# Configurable limit for the length of the GET URL for requesting Datafiles by a list of file locations
# The exact limit may depend on the server
getUrlLimit=1024
