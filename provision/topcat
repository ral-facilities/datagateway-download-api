#!/usr/bin/env ruby

command_name = ARGV[0]

def build_install
	system(%Q{
		rm -rf ~/topcat_tmp
		mkdir ~/topcat_tmp
		cp /vagrant/pom.xml ~/topcat_tmp
		cp /vagrant/topcat.properties ~/topcat_tmp
		mkdir ~/topcat_tmp/tools
		cp /vagrant/tools/topcat_admin ~/topcat_tmp/tools
		cp -r /vagrant/src ~/topcat_tmp
		cp -r /vagrant/provision ~/topcat_tmp
		cd ~/topcat_tmp
		mvn clean install
		cp ~/topcat_tmp/target/topcat-*.zip ~/
		cd ~/
		unzip -o topcat-*.zip
		cd topcat
		cp ~/topcat_tmp/provision/topcat.properties /home/vagrant/topcat/topcat.properties
		cp ~/topcat_tmp/provision/topcat-setup.properties /home/vagrant/topcat/topcat-setup.properties
		dos2unix ./setup
		chmod 0755 ./setup
		./setup configure
		./setup install
	})
end

def build_install_plugin(name)
	plugin_dir = "/vagrant/plugins/#{name}"

	if File.directory? plugin_dir
		system(%Q{
			rm -rf ~/#{name}_tmp
			cp -r #{plugin_dir} ~/#{name}_tmp
			cd ~/#{name}_tmp
			mvn clean install
			cd target
			if ls *.zip 1> /dev/null 2>&1; then
				cp #{name}-*.zip ~/
				cd ~/
				unzip -o #{name}-*.zip
				cd #{name}
				cp -R #{plugin_dir}/config ./
				dos2unix ./setup
				./setup install
			else
				asadmin deploy --force=true $(ls *.war)
			fi
		})
	else
		puts "No such plugin directory '#{plugin_dir}'"
	end
end

def build_install_plugins
	Dir.open("/vagrant/plugins").each do |name|
		next if name.match(/\A\./)
		build_install_plugin(name)
	end
end

def build_install_all
	build_install
	build_install_plugins
end

def generate_plugin(name)
	if !name.nil?
		to = "/vagrant/plugins/#{name}"
		Dir.mkdir(to) if !File.directory?(to)
		copy_plugin_files(name, "/vagrant/provision/skeleton_plugin", to)
		build_install_plugin(name)
	else
		puts "Please give a name e.g. foo_bar"
	end
end

def copy_plugin_files(name, from, to)

	name_no_underscores = name.gsub(/_/, '')
	name_with_hyphens = name.gsub(/_/, '-')
	name_camel_case = name.split(/_/).map{|segment| segment.capitalize }.join

	Dir.open(from).each do |item|
		next if item == '.' || item == '..'
		current_from = "#{from}/#{item}"
		current_to = "#{to}/#{item.gsub('skeleton-plugin', name_with_hyphens)}"

		if File.file?(current_from)
			data = File.read(current_from)
			data.encode!('UTF-8', 'binary', invalid: :replace, undef: :replace, replace: '')
			data.gsub!(/skeleton_plugin/, name)
			data.gsub!(/skeletonplugin/, name_no_underscores)
			data.gsub!(/skeleton-plugin/, name_with_hyphens)
			data.gsub!(/SkeletonPlugin/, name_camel_case)
			File.write(current_to, data)
		else
			Dir.mkdir(current_to) if !File.directory?(current_to)
			copy_plugin_files(name, current_from, current_to)
		end
	end
end

if command_name == 'build_install'
	build_install
elsif command_name == 'build_install_plugin'
	build_install_plugin(ARGV[1])
elsif command_name == 'build_install_plugins'
	build_install_plugins
elsif command_name == 'build_install_all'
	build_install_all
elsif command_name == 'generate_plugin'
	generate_plugin(ARGV[1])
elsif command_name.nil?
	puts ""
	puts "-------------------------"
	puts "Available commands"
	puts "-------------------------"
	puts "  * build_install"
	puts "  * build_install_plugin [plugin_name]"
	puts "  * build_install_plugins"
	puts "  * build_install_all"
	puts "  * generate_plugin [plugin_name]"
	puts ""
else
	puts "Unknown command '#{command_name}'"
end